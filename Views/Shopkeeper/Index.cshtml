@model WebApplication1.Models.ViewModel.ShopkeeperDashboardViewModel
@{
    Layout = null;
    var hasApprovedBrand = ViewBag.HasApprovedBrand as bool? ?? false;
    var brandStatus = ViewBag.BrandStatus as string ?? "No brand registered";
    var ratingCount = ViewBag.ratingCount as int? ?? 0;
    var ratingAverage = ViewBag.ratingAverage as decimal? ?? 0;
    var filledStars = (int)Math.Ceiling(ratingAverage);
    var hasHalfStar = (ratingAverage - filledStars) >= 0.5m;
}

<!DOCTYPE html>
<html lang="en"> 
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Shopkeeper Dashboard</title>
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons+Sharp" rel="stylesheet">
    <link href="~/css/css/styledashboard.css" rel="stylesheet" />
    <style>
        .disabled-link {
            opacity: 0.5;
            pointer-events: none;
            cursor: not-allowed;
        }

        .access-message {
            text-align: center;
            margin-top: 50px;
            padding: 30px;
            background: #f8f9fa;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            max-width: 600px;
            margin-left: auto;
            margin-right: auto;
            border: 1px solid #e0e0e0;
        }

        .brand-registration-link {
            background-color: #7380ec;
            color: white !important;
            border-radius: 5px;
            padding: 5px;
        }

        .btn-primary {
            display: inline-block;
            padding: 10px 20px;
            background-color: #7380ec;
            color: white;
            border-radius: 5px;
            text-decoration: none;
            margin-top: 15px;
            font-weight: 500;
        }

        .status-badge {
            display: inline-block;
            padding: 3px 8px;
            border-radius: 12px;
            font-size: 12px;
            font-weight: 600;
            margin-left: 5px;
        }

        .status-pending {
            background-color: #fff3cd;
            color: #856404;
        }

        .status-approved {
            background-color: #d4edda;
            color: #155724;
        }

        .status-rejected {
            background-color: #f8d7da;
            color: #721c24;
        }

        .rating-container {
            background: white;
            padding: 1.5rem;
            border-radius: var(--card-border-radius);
            box-shadow: var(--box-shadow);
            margin-bottom: 1.5rem;
        }

        .rating-header {
            display: flex;
            align-items: center;
            margin-bottom: 1rem;
        }

            .rating-header .material-icons-sharp {
                color: #ffc107;
                margin-right: 0.5rem;
                font-size: 1.8rem;
            }

            .rating-header h3 {
                color: var(--dark);
                font-size: 1.2rem;
            }

        .star-rating {
            display: flex;
            align-items: center;
        }

        .stars {
            display: inline-flex;
            position: relative;
            font-size: 1.5rem;
            letter-spacing: 0.2rem;
        }

            .stars .filled {
                color: #ffc107;
            }

            .stars .empty {
                color: #ccc;
            }

            .stars .half {
                position: relative;
                display: inline-block;
                width: 1rem;
                overflow: hidden;
                color: #ffc107;
            }

        .rating-count {
            margin-left: 0.5rem;
            font-size: 0.9rem;
            color: var(--dark-gray);
        }


        /* Delete Account Modal Styles */
        #deleteAccountModal .modal-content {
            border-radius: 12px;
            overflow: hidden;
            border: none;
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);
        }

        #deleteAccountModal .modal-header {
            border-bottom: none;
            padding: 1.5rem;
        }

        #deleteAccountModal .modal-body {
            padding: 2rem;
        }

        #deleteAccountModal .modal-footer {
            padding: 1.5rem;
            border-top: none;
        }

        #deleteAccountModal .btn-danger {
            padding: 0.75rem 1.5rem;
            font-weight: 500;
            display: inline-flex;
            align-items: center;
            transition: all 0.2s;
        }

            #deleteAccountModal .btn-danger:hover {
                transform: translateY(-2px);
                box-shadow: 0 4px 8px rgba(220, 53, 69, 0.3);
            }

        #deleteAccountModal .alert-warning {
            border-left: 4px solid #ffc107;
            text-align: left;
        }

        /* Animation */
        @@keyframes modalAppear {
            from {
                opacity: 0;
                transform: translateY(20px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .modal.fade .modal-dialog {
            animation: modalAppear 0.3s ease-out;
        }
    </style>
</head>

<body>
    <div class="container">
        <aside>
            <div class="top">
                <div class="logo">
                    <h1 class="text-muted">Stylora</h1>
                </div>
                <div class="close" id="btn-close">
                    <span class="material-icons-sharp">close</span>
                </div>
            </div>

            <div class="sidebar">
                <a href="Shopkeeper/Index" class="actived">
                    <span class="material-icons-sharp">dashboard</span>
                    <h3>Dashboard</h3>
                </a>

                <a href="@(hasApprovedBrand ? "#" : "Shopkeeper/RegisterBrand")" class="@(hasApprovedBrand ? "disabled-link" : "brand-registration-link")">
                    <span class="material-icons-sharp">add</span>
                    <h3>Register Brand</h3>
                    @if (hasApprovedBrand)
                    {
                        <small>(Completed)</small>
                    }
                </a>

                @if (hasApprovedBrand)
                {
                    <a href="Shopkeeper/RegisterProduct">
                        <span class="material-icons-sharp">add</span>
                        <h3>Add Product</h3>
                    </a>
                    <a href="Shopkeeper/GetAllProducts">
                        <span class="material-icons-sharp">inventory</span>
                        <h3>Products</h3>
                    </a>
                    <a href="Shopkeeper/Customers">
                        <span class="material-icons-sharp">person_outline</span>
                        <h3>Customers</h3>
                    </a>
                    <a href="Shopkeeper/Orders">
                        <span class="material-icons-sharp">receipt_long</span>
                        <h3>Orders</h3>
                    </a>
                    <a href="Shopkeeper/AllProductReviews">
                        <span class="material-icons-sharp">
                            mail_outline
                        </span>
                        <h3>Reviews</h3>
                        <span class="message-count">@ViewBag.Count</span>
                    </a>
                    <a href="Shopkeeper/Report">
                        <span class="material-icons-sharp">report_gmailerrorred</span>
                        <h3>Report</h3>
                    </a>
                    <a href="/Identity/Account/Manage/ChangePassword">
                        <span class="material-icons-sharp">lock_reset</span>
                        Change Password
                    </a>
                    <a href="#" class="dropdown-item" data-bs-toggle="modal" data-bs-target="#deleteAccountModal">
                        <span class="material-icons-sharp">delete_forever</span>
                        Delete Account
                    </a>
                }
                else
                {
                    <a class="disabled-link" href="#">
                        <span class="material-icons-sharp">add</span>
                        <h3>Add Product</h3>
                        <small>(Requires approved brand)</small>
                    </a>
                    <a class="disabled-link" href="#">
                        <span class="material-icons-sharp">inventory</span>
                        <h3>Products</h3>
                        <small>(Requires approved brand)</small>
                    </a>
                    <a class="disabled-link" href="#">
                        <span class="material-icons-sharp">person_outline</span>
                        <h3>Customers</h3>
                    </a>
                    <a class="disabled-link" href="#">
                        <span class="material-icons-sharp">receipt_long</span>
                        <h3>Orders</h3>
                    </a>
                    <a class="disabled-link" href="#">
                        <span class="material-icons-sharp">mail_outline</span>
                        <h3>Reviews</h3>
                    </a>
                    <a class="disabled-link" href="#">
                        <span class="material-icons-sharp">report_gmailerrorred</span>
                        <h3>Reports</h3>
                    </a>
                }
                @using (Html.BeginForm("Logout", "Account", FormMethod.Post, new { id = "logoutForm", @class = "d-inline" }))
                {
                    @Html.AntiForgeryToken()
                    <a href="javascript:document.getElementById('logoutForm').submit();" style="text-decoration: none;">
                        <span class="material-icons-sharp">logout</span>
                        <h3>Logout</h3>
                    </a>
                }
            </div>
        </aside>

        <main>
            @if (!hasApprovedBrand)
            {
                <div class="access-message">
                    <h2>Welcome to Your Shopkeeper Dashboard</h2>
                    <p>To access all features, please register your brand and wait for approval. You'll receive a notification once your brand is approved.</p>
                    <p>
                        Brand Status:
                        <span class="status-badge @GetStatusClass(brandStatus)">@brandStatus</span>
                    </p>
                    @if (brandStatus == "No brand registered")
                    {
                        <a href="Shopkeeper/RegisterBrand" class="btn-primary">Register Your Brand Now</a>
                    }
                    else
                    {
                        <p>We're reviewing your brand registration. Please check back later.</p>
                    }
                </div>
            }
            else
            {
                <h1>Shopkeeper Dashboard</h1>
                <div class="date">
                    <input type="date" value="@DateTime.Now.ToString("yyyy-MM-dd")" class="no-calendar">
                </div>

                <div class="insights">
                    <div class="sales">
                        <span class="material-icons-sharp">analytics</span>
                        <div class="middle">
                            <div class="left">
                                <h3>Total Sales</h3>
                                <h1>Rs. @(Model.Stats?.TotalSales.ToString("N0") ?? "0")</h1>
                            </div>
                        </div>
                    </div>

                    <div class="expenses">
                        <span class="material-icons-sharp">receipt_long</span>
                        <div class="middle">
                            <div class="left">
                                <h3>Total Orders</h3>
                                <h1>@(Model.Stats?.OrderCount.ToString() ?? "0")</h1>
                            </div>
                        </div>
                    </div>

                    <div class="income">
                        <span class="material-icons-sharp">people</span>
                        <div class="middle">
                            <div class="left">
                                <h3>Customers</h3>
                                <h1>@(Model.Stats?.CustomerCount.ToString() ?? "0")</h1>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="recent-orders">
                    <h2>Recent Orders</h2>
                    <table>
                        <thead>
                            <tr>
                                <th>Customer</th>
                                <th>OrderId</th>
                                <th>Amount</th>
                                <th>Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.RecentOrders != null && Model.RecentOrders.Any())
                            {
                                foreach (var order in Model.RecentOrders)
                                {
                                    <tr>
                                        <td>@order.CustomerName</td>
                                        <td>@order.OrderId</td>
                                        <td>Rs. @order.TotalAmount.ToString("N0")</td>
                                        <td class="@(order.Status == "Pending" ? "warning" : "success")">@order.Status</td>
                                        <td>
                                            <a asp-action="detailsOfOrder" asp-controller="Shopkeeper" asp-route-id="@order.OrderId" class="btn btn-sm">View Details</a>
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="5">No recent orders</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                    <a href="@Url.Action("Orders", "Shopkeeper")">Show More</a>
                </div>
            }
        </main>

        <div class="right">
            <div class="top">
                <button id="btn-menu">
                    <span class="material-icons-sharp">
                        menu
                    </span>
                </button>
                <div class="theme-toggler">
                    <span class="material-icons-sharp actived">
                        light_mode
                    </span>
                    <span class="material-icons-sharp">
                        dark_mode
                    </span>
                </div>
                <div class="profile">
                    <div class="info">
                        <p>Hey, <b>@(Model.ShopkeeperName ?? User.Identity?.Name)</b></p>
                    </div>
                    <div class="profile-photo">
                        <img src="https://ui-avatars.com/api/?name=@(Model.ShopkeeperName ?? User.Identity?.Name)&background=7380ec&color=fff" alt="Profile">
                    </div>
                </div>
            </div>

            <div class="rating-container">
                <div class="rating-header">
                    <span class="material-icons-sharp">star</span>
                    <h3>Customer Rating</h3>
                </div>
                <div class="star-rating">
                    <div class="stars">
                        @for (int i = 1; i <= 5; i++)
                        {
                            if (i <= filledStars)
                            {
                                <span class="filled">★</span>
                            }
                            else if (i == filledStars + 1 && hasHalfStar)
                            {
                                <span class="half">★</span>
                            }
                            else
                            {
                                <span class="empty">★</span>
                            }
                        }
                    </div>
                    <span class="rating-count">@ratingCount Reviews</span>
                </div>
            </div>

            <div class="recent-updates">
                <h2>Recent Updates</h2>
                <div class="updates">
                    @if (!hasApprovedBrand)
                    {
                        <div class="update">
                            <div class="profile-photo">
                                <span class="material-icons-sharp">info</span>
                            </div>
                            <div class="message">
                                <p><b>Brand Registration</b>: @brandStatus</p>
                                <small>Updated just now</small>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="update">
                            <div class="profile-photo">
                                <span class="material-icons-sharp">check_circle</span>
                            </div>
                            <div class="message">
                                <p><b>Brand Approved</b>: Your brand has been approved!</p>
                                <small>@DateTime.Now.ToString("MMMM dd, yyyy")</small>
                            </div>
                        </div>
                    }
                </div>
            </div>

            <div class="sales-analytics">
                <h2>Shop Status</h2>
                @if (!hasApprovedBrand)
                {
                    <div class="item offline">
                        <div class="icon">
                            <span class="material-icons-sharp">store</span>
                        </div>
                        <div class="right">
                            <div class="info">
                                <h3>SHOP STATUS</h3>
                                <small>Brand registration required</small>
                            </div>
                            <h5 class="danger">Inactive</h5>
                        </div>
                    </div>
                }
                else
                {
                    <div class="item online">
                        <div class="icon">
                            <span class="material-icons-sharp">store</span>
                        </div>
                        <div class="right">
                            <div class="info">
                                <h3>SHOP STATUS</h3>
                                <small>Ready for business</small>
                            </div>
                            <h5 class="success">Active</h5>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
    <span class="aside-overview"></span>
    <!-- Delete Account Confirmation Modal -->
    <div class="modal fade" id="deleteAccountModal" tabindex="-1" aria-labelledby="deleteAccountModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header bg-danger text-white">
                    <h5 class="modal-title" id="deleteAccountModalLabel">
                        <span class="material-icons-sharp me-2">warning</span>
                        Confirm Account Deletion
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body text-center py-4">
                    <div class="mb-4">
                        <span class="material-icons-sharp text-danger" style="font-size: 4rem;">delete_forever</span>
                    </div>
                    <h4 class="mb-3">Are you absolutely sure?</h4>
                    <p class="text-muted mb-4">
                        This action <strong>cannot be undone</strong>. This will permanently delete your:
                    </p>
                    <ul class="text-start text-muted mb-4">
                        <li>Brand account and all associated data</li>
                        <li>Products and inventory information</li>
                        <li>Order history and customer records</li>
                    </ul>
                    <div class="alert alert-warning">
                        <strong>Important:</strong> We strongly recommend you <a href="Shopkeeper/Report" class="alert-link">download your store report</a> before proceeding.
                    </div>
                </div>
                <div class="modal-footer justify-content-center border-0">
                    <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">
                        Cancel
                    </button>
                    <form asp-controller="Shopkeeper" asp-action="DeleteAccount" method="post" id="deleteAccountForm">
                        @Html.AntiForgeryToken()
                        <button type="submit" class="btn btn-danger">
                            <span class="material-icons-sharp me-1">delete_forever</span>
                            Delete My Account
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>
    <!-- Add this right before </body> -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        const sideMenu = document.querySelector("aside");
        const menuBtn = document.querySelector("#btn-menu");
        const closeBtn = document.querySelector("#btn-close");
        const themeThoggler = document.querySelector(".theme-toggler");
        const asideOverview = document.querySelector(".aside-overview");

        // Menu toggle function
        const toggleMenu = () => {
            document.body.classList.toggle("show-menu");
            document.body.classList.toggle("fixed-scroll");
        };

        // Event listeners
        menuBtn.addEventListener("click", toggleMenu);
        closeBtn.addEventListener("click", toggleMenu);
        asideOverview.addEventListener("click", toggleMenu);

        // Theme toggler
        themeThoggler.addEventListener("click", () => {
            document.body.classList.toggle("dark-theme-variables");
            themeThoggler.querySelector("span:nth-child(1)").classList.toggle("actived");
            themeThoggler.querySelector("span:nth-child(2)").classList.toggle("actived");
        });

        // Delete Account Form Submission
        document.getElementById('deleteAccountForm')?.addEventListener('submit', function(e) {
            e.preventDefault();

            const submitBtn = this.querySelector('button[type="submit"]');
            const originalText = submitBtn.innerHTML;

            // Show loading state
            submitBtn.innerHTML = '<span class="spinner-border spinner-border-sm me-1" role="status" aria-hidden="true"></span> Deleting...';
            submitBtn.disabled = true;

            // Submit the form
            fetch(this.action, {
                method: 'POST',
                body: new FormData(this),
                headers: {
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                }
            })
            .then(response => {
                if (response.redirected) {
                    window.location.href = response.url;
                } else {
                    submitBtn.innerHTML = originalText;
                    submitBtn.disabled = false;
                }
            })
            .catch(error => {
                console.error('Error:', error);
                submitBtn.innerHTML = originalText;
                submitBtn.disabled = false;
            });
        });
    </script>
</body>
</html>
@functions {
    public string GetStatusClass(string status)
    {
        return status switch
        {
            "Pending" => "status-pending",
            "Approved" => "status-approved",
            "Rejected" => "status-rejected",
            _ => ""
        };
    }
}