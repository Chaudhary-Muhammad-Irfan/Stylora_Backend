@model Product
@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit Product</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        :root {
            --primary-color: #2a9d8f;
            --secondary-color: #f8f9fa;
            --accent-color: #e9c46a;
            --text-color: #264653;
        }

        body {
            background: #f8f9fa;
            min-height: 100vh;
            padding: 2rem;
            font-family: 'Segoe UI', system-ui, sans-serif;
        }

        .product-form-container {
            background: white;
            border-radius: 20px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.08);
            margin: 0 auto;
            max-width: 800px;
            padding: 2.5rem;
        }

        .form-title {
            color: var(--primary-color);
            text-align: center;
            margin-bottom: 2.5rem;
            font-weight: 700;
            letter-spacing: 0.5px;
            position: relative;
            font-size: 2.2rem;
        }

            .form-title::after {
                content: '';
                position: absolute;
                bottom: -15px;
                left: 50%;
                transform: translateX(-50%);
                width: 60px;
                height: 3px;
                background: var(--primary-color);
            }

        .form-section {
            margin-bottom: 2rem;
            padding: 1.5rem;
            border-radius: 15px;
            border: 1px solid #e9ecef;
            background: linear-gradient(to bottom right, #ffffff, #f8f9fa);
        }

        .size-option {
            display: flex;
            flex-direction: column;
            align-items: center;
            margin-bottom: 1rem;
        }

            .size-option label {
                width: 60px;
                height: 60px;
                border-radius: 50%;
                background: var(--secondary-color);
                border: 2px solid #dee2e6;
                display: flex;
                align-items: center;
                justify-content: center;
                cursor: pointer;
                transition: all 0.3s ease;
                font-weight: 600;
                color: var(--text-color);
            }

            .size-option input[type="checkbox"]:checked + label {
                background: var(--primary-color);
                color: white;
                border-color: var(--primary-color);
                transform: scale(1.1);
            }

        .file-upload {
            border: 2px dashed #dee2e6;
            border-radius: 15px;
            padding: 2rem;
            text-align: center;
            cursor: pointer;
            transition: all 0.3s ease;
            background: rgba(233, 236, 239, 0.3);
        }

            .file-upload:hover {
                border-color: var(--primary-color);
                background: rgba(42, 157, 143, 0.05);
            }

        .preview-image {
            width: 100px;
            height: 100px;
            object-fit: cover;
            border-radius: 12px;
            margin: 5px;
            border: 2px solid #dee2e6;
            transition: transform 0.3s ease;
        }

        .form-control {
            border: 2px solid #dee2e6;
            border-radius: 10px;
            padding: 12px 16px;
            transition: all 0.3s ease;
        }

            .form-control:focus {
                border-color: var(--primary-color);
                box-shadow: 0 0 0 3px rgba(42, 157, 143, 0.2);
            }

        .submit-btn {
            background: var(--primary-color);
            color: white;
            padding: 16px 32px;
            border-radius: 12px;
            border: none;
            font-weight: 600;
            transition: all 0.3s ease;
            width: 100%;
            font-size: 1.1rem;
            letter-spacing: 0.5px;
        }

            .submit-btn:hover {
                transform: translateY(-2px);
                box-shadow: 0 5px 15px rgba(42, 157, 143, 0.3);
            }

        .success-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0,0,0,0.9);
            display: none;
            justify-content: center;
            align-items: center;
            z-index: 9999;
            animation: fadeIn 0.3s ease;
        }

        .success-message {
            background: white;
            padding: 3rem;
            border-radius: 20px;
            text-align: center;
            max-width: 500px;
            width: 90%;
            box-shadow: 0 10px 30px rgba(0,0,0,0.2);
            animation: popIn 0.3s ease;
        }

        .promo-field {
            position: relative;
        }

        .promo-examples {
            font-size: 0.9rem;
            color: #6c757d;
            margin-top: 5px;
        }

        .size-quantity-container {
            display: flex;
            flex-wrap: wrap;
            gap: 1rem;
        }

        .size-quantity-group {
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .success-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0,0,0,0.85);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 9999;
            animation: fadeIn 0.3s ease;
        }

        .success-message {
            background: white;
            padding: 3rem;
            border-radius: 20px;
            text-align: center;
            max-width: 500px;
            width: 90%;
            box-shadow: 0 10px 30px rgba(0,0,0,0.2);
            animation: popIn 0.3s ease;
        }

        @@keyframes fadeIn {
            from {
                opacity: 0;
            }

            to {
                opacity: 1;
            }
        }

        @@keyframes popIn {
            0% {
                transform: scale(0.8);
                opacity: 0;
            }

            80% {
                transform: scale(1.05);
            }

            100% {
                transform: scale(1);
                opacity: 1;
            }
        }
    </style>
</head>
<body>
    <div class="product-form-container">
        <h2 class="form-title">Edit Product</h2>
        <form method="post" asp-controller="Shopkeeper" asp-action="UpdateProduct" id="productForm" enctype="multipart/form-data">
            @Html.AntiForgeryToken()
            <input type="hidden" asp-for="productId" />
            <input type="hidden" asp-for="productCode" />
            <input type="hidden" asp-for="brandId" />
            <input type="hidden" asp-for="brandName" />

            <!-- Product Details Section -->
            <div class="form-section">
                <div class="mb-4">
                    <label class="form-label fw-bold">Product Name</label>
                    <input type="text" class="form-control" asp-for="productName" value="@Model?.productName" required>
                </div>
                <div class="mb-4">
                    <label class="form-label fw-bold">Product Category</label>
                    <input type="text" class="form-control" asp-for="productCategory" value="@Model?.productCategory" required>
                </div>
                <div class="mb-4">
                    <label class="form-label fw-bold">Product Description</label>
                    <textarea class="form-control" asp-for="productDescription" rows="4" required>@Model?.productDescription</textarea>
                </div>

                <div class="row g-3">
                    <div class="col-md-6">
                        <label class="form-label fw-bold">Price (PKR)</label>
                        <input type="number" class="form-control" asp-for="price" value="@(Model?.price.ToString() ?? "0")" required>
                    </div>
                    <div class="col-md-6">
                        <label class="form-label fw-bold">Discount %</label>
                        <input type="number" class="form-control" asp-for="discount" value="@(Model?.discount.ToString() ?? "0")" min="0" max="100">
                    </div>
                </div>

                <div class="mt-4 promo-field">
                    <label class="form-label fw-bold">Special Offer Tagline</label>
                    <input type="text" class="form-control" asp-for="tagLine" value="@Model?.tagLine" maxlength="60">
                </div>
            </div>

            <!-- Size & Quantity Section -->
            <div class="form-section">
                <label class="form-label fw-bold mb-3">Available Sizes & Quantities</label>
                <div class="size-quantity-container">
                    @{
                        var availableSizes = Model?.AvailableSizes ?? new List<string>();
                        var stockQuantities = Model?.stock ?? new List<string>();
                        var sizes = new List<string> { "S", "M", "L", "XL" };

                        foreach (var size in sizes)
                        {
                            var isChecked = availableSizes?.Contains(size) ?? false;
                            var sizeIndex = isChecked ? availableSizes.IndexOf(size) : -1;
                            var quantity = (isChecked && sizeIndex >= 0 && sizeIndex < stockQuantities?.Count) ? stockQuantities[sizeIndex] : "1";

                            <div class="size-quantity-group">
                                <div class="size-option">
                                    <input type="checkbox" name="AvailableSizes" value="@size" id="size@(size)"
                                    @(isChecked ? "checked" : "") onchange="toggleQuantityInput('size@(size)')">
                                    <label for="size@(size)">@size</label>
                                </div>
                                <input type="number" id="quantity@(size)" name="stock" class="form-control mt-2 quantity-input"
                                       value="@quantity" placeholder="Qty" min="1"
                                       style="@(isChecked ? "" : "display: none;") width: 100px;">
                            </div>
                        }
                    }
                </div>
            </div>

            <!-- Media Section -->
            <div class="form-section">
                <div class="mb-4">
                    <label class="form-label fw-bold">Main Thumbnail</label>
                    <div class="file-upload" onclick="document.getElementById('thumbnail').click()">
                        @if (!string.IsNullOrEmpty(Model?.productThumbnailURL))
                        {
                            <img src="~/@Model.productThumbnailURL" class="preview-image mb-2" id="currentThumbnail">
                        }
                        else
                        {
                            <i class="fas fa-camera fa-2x text-muted mb-3"></i>
                            <p class="mb-0">Click to upload featured image</p>
                        }
                        <input type="file" id="thumbnail" name="productThumbnail" class="d-none" accept="image/*">
                    </div>
                    <div id="thumbnailPreview" class="mt-3"></div>
                </div>

                <div class="mb-4">
                    <label class="form-label fw-bold">Gallery Images</label>
                    <div class="file-upload" onclick="document.getElementById('productImages').click()">
                        @if (Model?.productImagesURL != null && Model.productImagesURL.Count > 0)
                        {
                            <div class="d-flex flex-wrap">
                                @foreach (var imageUrl in Model.productImagesURL)
                                {
                                    <img src="~/@imageUrl" class="preview-image me-2 mb-2">
                                }
                            </div>
                        }
                        else
                        {
                            <i class="fas fa-images fa-2x text-muted mb-3"></i>
                            <p class="mb-0">Upload product gallery (up to 10 images)</p>
                        }
                        <input type="file" id="productImages" name="productImages" class="d-none" accept="image/*" multiple>
                    </div>
                    <div id="imagePreviews" class="mt-3 d-flex flex-wrap"></div>
                </div>

                <div class="mb-4">
                    <label class="form-label fw-bold">Size Chart Image</label>
                    <div class="file-upload" onclick="document.getElementById('sizeChart').click()">
                        @if (!string.IsNullOrEmpty(Model?.sizeChartURL))
                        {
                            <img src="~/@Model.sizeChartURL" class="preview-image" id="currentSizeChart">
                        }
                        else
                        {
                            <i class="fas fa-ruler-combined fa-2x text-muted mb-3"></i>
                            <p class="mb-0">Upload size chart</p>
                        }
                        <input type="file" id="sizeChart" name="sizeChart" class="d-none" accept="image/*">
                    </div>
                    <div id="sizeChartPreview" class="mt-3"></div>
                </div>
            </div>

            <div class="d-flex justify-content-between mt-4">
                <button type="submit" class="submit-btn me-2">
                    <i class="fas fa-save me-2"></i>Update Product
                </button>
                <a href="/Shopkeeper/getAllProducts" class="btn btn-secondary" style="padding: 16px 32px; border-radius: 12px;">
                    <i class="fas fa-times me-2"></i>Cancel
                </a>
            </div>
        </form>
    </div>
    <!-- Success Overlay -->
    <div id="successOverlay" class="success-overlay" style="@(TempData["SuccessMessage"] != null ? "display: flex;" : "display: none;")">
        <div class="success-message">
            <div class="mb-4">
                <svg xmlns="http://www.w3.org/2000/svg" width="80" height="80" fill="#28a745" class="bi bi-check-circle" viewBox="0 0 16 16">
                    <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z" />
                    <path d="M10.97 4.97a.235.235 0 0 0-.02.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-1.071-1.05z" />
                </svg>
            </div>
            <h3 class="mb-3">Success!</h3>
            <p class="mb-4">@TempData["SuccessMessage"]</p>
            <button class="btn btn-success" onclick="hideSuccessOverlay()">Continue Editing</button>
        </div>
    </div>
    <script>
        const createPreview = (file, container) => {
            const reader = new FileReader();
            reader.onload = (e) => {
                const preview = document.createElement('div');
                preview.className = 'position-relative d-inline-block me-3';

                const img = document.createElement('img');
                img.className = 'preview-image';
                img.src = e.target.result;

                const removeBtn = document.createElement('button');
                removeBtn.className = 'btn btn-danger btn-sm position-absolute top-0 end-0';
                removeBtn.innerHTML = '×';
                removeBtn.onclick = () => preview.remove();

                preview.appendChild(img);
                preview.appendChild(removeBtn);
                container.appendChild(preview);
            };
            reader.readAsDataURL(file);
        };

        document.getElementById('thumbnail').addEventListener('change', function() {
            const container = document.getElementById('thumbnailPreview');
            container.innerHTML = '';
            if (this.files[0]) {
                createPreview(this.files[0], container);
                document.getElementById('currentThumbnail')?.remove();
            }
        });

        document.getElementById('productImages').addEventListener('change', function() {
            const container = document.getElementById('imagePreviews');
            container.innerHTML = '';
            Array.from(this.files).forEach(file => createPreview(file, container));
        });

        document.getElementById('sizeChart').addEventListener('change', function() {
            const container = document.getElementById('sizeChartPreview');
            container.innerHTML = '';
            if (this.files[0]) {
                createPreview(this.files[0], container);
                document.getElementById('currentSizeChart')?.remove();
            }
        });

        function toggleQuantityInput(sizeId) {
            const checkbox = document.getElementById(sizeId);
            const quantityInput = document.getElementById('quantity' + sizeId.substring(4));

            if (checkbox.checked) {
                quantityInput.style.display = 'block';
                quantityInput.required = true;
                if (!quantityInput.value) quantityInput.value = '1';
            } else {
                quantityInput.style.display = 'none';
                quantityInput.required = false;
                quantityInput.value = '';
            }
        }

        document.getElementById('productForm').addEventListener('submit', function(e) {
            const sizesSelected = document.querySelectorAll('input[name="AvailableSizes"]:checked');
            if(sizesSelected.length === 0) {
                alert('Please select at least one size');
                e.preventDefault();
                return false;
            }

            let allQuantitiesValid = true;
            sizesSelected.forEach(size => {
                const sizeId = size.id;
                const quantityInput = document.getElementById('quantity' + sizeId.substring(4));
                if (!quantityInput.value || parseInt(quantityInput.value) < 1) {
                    allQuantitiesValid = false;
                    quantityInput.style.border = '2px solid red';
                } else {
                    quantityInput.style.border = '';
                }
            });

            if (!allQuantitiesValid) {
                alert('Please enter valid quantities for all selected sizes');
                e.preventDefault();
                return false;
            }

            return true;
        });
                // Success message handling
        function hideSuccessOverlay() {
            document.getElementById('successOverlay').style.display = 'none';
        }

        // Auto-hide success message after 5 seconds
        setTimeout(() => {
            hideSuccessOverlay();
        }, 5000);
    </script>
</body>
</html>